{"ast":null,"code":"import _objectSpread from \"/Users/annanaz/dev/movies-explorer-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/annanaz/dev/movies-explorer-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/annanaz/dev/movies-explorer-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nvar MainApi = /*#__PURE__*/function () {\n  function MainApi(_ref) {\n    var baseUrl = _ref.baseUrl,\n      headers = _ref.headers;\n    _classCallCheck(this, MainApi);\n    this.baseUrl = baseUrl;\n    this.headers = headers;\n  }\n  _createClass(MainApi, [{\n    key: \"login\",\n    value: function login(email, password) {\n      return this._request(this.baseUrl + '/signin', {\n        method: 'POST',\n        headers: this.headers,\n        body: JSON.stringify({\n          email: email,\n          password: password\n        })\n      });\n    }\n  }, {\n    key: \"register\",\n    value: function register(name, email, password) {\n      return this._request(this.baseUrl + '/signup', {\n        method: 'POST',\n        headers: this.headers,\n        body: JSON.stringify({\n          name: name,\n          email: email,\n          password: password\n        })\n      });\n    }\n  }, {\n    key: \"profileUpdate\",\n    value: function profileUpdate(name, email) {}\n  }, {\n    key: \"checkToken\",\n    value: function checkToken(token) {\n      return this._request(this.baseUrl + '/users/me', {\n        method: 'GET',\n        headers: _objectSpread({\n          \"Authorization\": \"Bearer \".concat(token)\n        }, this.headers)\n      });\n    }\n  }, {\n    key: \"_checkResponse\",\n    value: function _checkResponse(res) {\n      if (res.ok) {\n        return res.json();\n      }\n      // если ошибка, отклоняем промис\n      return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));\n    } // метод запроса с проверкой ответа\n  }, {\n    key: \"_request\",\n    value: function _request(url, options) {\n      return fetch(url, options).then(this._checkResponse);\n    }\n  }]);\n  return MainApi;\n}();\nexport var mainApi = new MainApi({\n  baseUrl: 'http://localhost:3000',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});","map":{"version":3,"names":["MainApi","_ref","baseUrl","headers","_classCallCheck","_createClass","key","value","login","email","password","_request","method","body","JSON","stringify","register","name","profileUpdate","checkToken","token","_objectSpread","concat","_checkResponse","res","ok","json","Promise","reject","status","url","options","fetch","then","mainApi"],"sources":["/Users/annanaz/dev/movies-explorer-frontend/src/utils/MainApi.js"],"sourcesContent":["class MainApi {\n    constructor({ baseUrl, headers }) {\n        this.baseUrl = baseUrl;\n        this.headers = headers;\n    }\n\n    login(email, password) {\n        return this._request(this.baseUrl + '/signin', {\n            method: 'POST',\n            headers: this.headers,\n            body: JSON.stringify({\n                email, password\n            })\n        })\n    }\n\n    register(name, email, password) {\n        return this._request(this.baseUrl + '/signup', {\n            method: 'POST',\n            headers: this.headers,\n            body: JSON.stringify({\n                name, email, password\n            })\n        })\n    }\n\n    profileUpdate(name, email) {\n\n    }\n\n    checkToken(token) {\n        return this._request(this.baseUrl + '/users/me', {\n            method: 'GET',\n            headers: {\n                \"Authorization\": `Bearer ${token}`,\n                ...this.headers\n            }\n        })\n    }\n\n    _checkResponse(res) {\n        if (res.ok) {\n            return res.json();\n        }\n        // если ошибка, отклоняем промис\n        return Promise.reject(`Ошибка: ${res.status}`);\n    }\n\n    // метод запроса с проверкой ответа\n    _request(url, options) {\n        return fetch(url, options).then(this._checkResponse);\n    }\n}\n\nexport const mainApi = new MainApi({\n    baseUrl: 'http://localhost:3000',\n    headers: {\n        'Content-Type': 'application/json'\n    }\n})"],"mappings":";;;IAAMA,OAAO;EACT,SAAAA,QAAAC,IAAA,EAAkC;IAAA,IAApBC,OAAO,GAAAD,IAAA,CAAPC,OAAO;MAAEC,OAAO,GAAAF,IAAA,CAAPE,OAAO;IAAAC,eAAA,OAAAJ,OAAA;IAC1B,IAAI,CAACE,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,OAAO,GAAGA,OAAO;EAC1B;EAACE,YAAA,CAAAL,OAAA;IAAAM,GAAA;IAAAC,KAAA,WAAAC,MAEKC,KAAK,EAAEC,QAAQ,EAAE;MACnB,OAAO,IAAI,CAACC,QAAQ,CAAC,IAAI,CAACT,OAAO,GAAG,SAAS,EAAE;QAC3CU,MAAM,EAAE,MAAM;QACdT,OAAO,EAAE,IAAI,CAACA,OAAO;QACrBU,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjBN,KAAK,EAALA,KAAK;UAAEC,QAAQ,EAARA;QACX,CAAC;MACL,CAAC,CAAC;IACN;EAAC;IAAAJ,GAAA;IAAAC,KAAA,WAAAS,SAEQC,IAAI,EAAER,KAAK,EAAEC,QAAQ,EAAE;MAC5B,OAAO,IAAI,CAACC,QAAQ,CAAC,IAAI,CAACT,OAAO,GAAG,SAAS,EAAE;QAC3CU,MAAM,EAAE,MAAM;QACdT,OAAO,EAAE,IAAI,CAACA,OAAO;QACrBU,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjBE,IAAI,EAAJA,IAAI;UAAER,KAAK,EAALA,KAAK;UAAEC,QAAQ,EAARA;QACjB,CAAC;MACL,CAAC,CAAC;IACN;EAAC;IAAAJ,GAAA;IAAAC,KAAA,WAAAW,cAEaD,IAAI,EAAER,KAAK,EAAE,CAE3B;EAAC;IAAAH,GAAA;IAAAC,KAAA,WAAAY,WAEUC,KAAK,EAAE;MACd,OAAO,IAAI,CAACT,QAAQ,CAAC,IAAI,CAACT,OAAO,GAAG,WAAW,EAAE;QAC7CU,MAAM,EAAE,KAAK;QACbT,OAAO,EAAAkB,aAAA;UACH,eAAe,YAAAC,MAAA,CAAYF,KAAK;QAAE,GAC/B,IAAI,CAACjB,OAAO;MAEvB,CAAC,CAAC;IACN;EAAC;IAAAG,GAAA;IAAAC,KAAA,WAAAgB,eAEcC,GAAG,EAAE;MAChB,IAAIA,GAAG,CAACC,EAAE,EAAE;QACR,OAAOD,GAAG,CAACE,IAAI,CAAC,CAAC;MACrB;MACA;MACA,OAAOC,OAAO,CAACC,MAAM,0CAAAN,MAAA,CAAYE,GAAG,CAACK,MAAM,CAAE,CAAC;IAClD,CAAC,CAED;EAAA;IAAAvB,GAAA;IAAAC,KAAA,WAAAI,SACSmB,GAAG,EAAEC,OAAO,EAAE;MACnB,OAAOC,KAAK,CAACF,GAAG,EAAEC,OAAO,CAAC,CAACE,IAAI,CAAC,IAAI,CAACV,cAAc,CAAC;IACxD;EAAC;EAAA,OAAAvB,OAAA;AAAA;AAGL,OAAO,IAAMkC,OAAO,GAAG,IAAIlC,OAAO,CAAC;EAC/BE,OAAO,EAAE,uBAAuB;EAChCC,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module"}